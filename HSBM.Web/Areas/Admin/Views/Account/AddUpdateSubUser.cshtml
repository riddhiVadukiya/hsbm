@model HSBM.EntityModel.SystemUsers.SystemUsers

@{
    if (Model.Id > 0)
    {
        ViewBag.Title = "Update System User";
    }
    else
    {
        ViewBag.Title = "Add System User";
    }

    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="main-wrapper">
    <h3>@ViewBag.Title</h3>
    <script>
        //$(document).ready(function () {

        //    $("#CountryMasterID").change(function () {
        //        $.post('/Admin/Locations/GetRegionList', { Id: $('#CountryMasterID').val() }, function (data) {
        //            var options = $("#RegionMasterID");
        //            options.find('option').remove();

        //            $("#CityMasterID").find('option').remove();
        //            $("#CityMasterID").append($("<option />").val('0').text('Select'));

        //            $.each(data, function () {
        //                options.append($("<option />").val(this.Value).text(this.Text));
        //            });
        //        })
        //    });

        //    $("#RegionMasterID").change(function () {
        //        $.post('/Admin/Locations/GetCityList', { Id: $('#RegionMasterID').val() }, function (data) {
        //            var options = $("#CityMasterID");
        //            options.find('option').remove();
        //            $.each(data, function () {
        //                options.append($("<option />").val(this.Value).text(this.Text));
        //            });
        //        })
        //    });
        //});
        //function isValidPhone(evt) {
        //    evt = (evt) ? evt : window.event;
        //    var charCode = (evt.which) ? evt.which : evt.keyCode;
        //    if ((charCode >= 48 && charCode <= 57) || charCode == 40 || charCode == 41 || charCode == 43 || charCode == 45) {
        //        if ($("#Telephone").val().length == 0 && charCode == 45) {
        //            return false;
        //        }
        //        else {
        //            return true;
        //        }
        //    }
        //    else {
        //        return false;
        //    }
        //}
        function RemoveSpace(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 32) {
                return true;
            }
            else {
                return false;
            }
        }
    </script>

    @using (Html.BeginForm("AddUpdateSubUser", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
    <div class="inner-content">
        <div class="row">
            @*<h4>System Users</h4>*@
            @*<hr />*@
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)

            <div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.RoleMasterID, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.RoleMasterID, ViewBag.RoleDropDown as List<SelectListItem>, new { @class = "select2_single form-control" })
                    @Html.ValidationMessageFor(model => model.RoleMasterID)
                </div>
            </div>
            @*<div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.UserName, new {  maxlength = "50" })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>*@            
            <div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label", maxlength = "50" })
                    @Html.TextBoxFor(model => model.FirstName, new {  onkeypress = "return RemoveSpace(event)" })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>
            @*<div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.MiddleName )
                    @Html.ValidationMessageFor(model => model.MiddleName)
                </div>
            </div>*@
            <div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label", maxlength = "50" })
                    @Html.TextBoxFor(model => model.LastName )
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>
            <div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Email, new {  maxlength = "255" })
                    @Html.ValidationMessageFor(model => model.Email)
                    <div style="color:red;">@ViewBag.Message</div>                    
                </div>
            </div>
            @*<div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Telephone, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Telephone, new {  maxlength = "50", onkeypress = "return isValidPhone(event)" })
                    @Html.ValidationMessageFor(model => model.Telephone)
                </div>
            </div>*@
            @if (Model.Id == 0)
            {
                <div class="col-xs-12 col-sm-4 col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                        @Html.PasswordFor(model => model.Password)
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>
            }
            <div class="col-xs-12 col-sm-4 col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Mobile, new {  maxlength = "50" })
                    @Html.ValidationMessageFor(model => model.Mobile)
                </div>
            </div>
            @*<div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Gender, ViewBag.GenderDropDown as List<SelectListItem>, new { @class = "select2_single form-control" })
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Address, new {  maxlength = "255" })
            @Html.ValidationMessageFor(model => model.Address)
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Address2, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Address2, new {  maxlength = "255" })
            @Html.ValidationMessageFor(model => model.Address2)
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            <label class="control-label">Country</label>
            @Html.DropDownListFor(model => model.CountryMasterID, ViewBag.CountryDropDown as List<SelectListItem>, new { @class = "select2_single form-control" })
            @Html.ValidationMessageFor(model => model.CountryMasterID)
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            <label class="control-label">Region</label>
            @Html.DropDownListFor(model => model.RegionMasterID, ViewBag.RegionDropDown as List<SelectListItem>, new { @class = "select2_single form-control" })
            @Html.ValidationMessageFor(model => model.RegionMasterID)
        </div>
    </div>
    <div class="col-xs-12 col-sm-4 col-md-4">
        <div class="form-group">
            <label class="control-label">City</label>
            @Html.DropDownListFor(model => model.CityMasterID, ViewBag.CityDropDown as List<SelectListItem>, new { @class = "select2_single form-control" })
            @Html.ValidationMessageFor(model => model.CityMasterID)
        </div>
    </div>*@
            @*<div class="col-xs-12 col-sm-4 col-md-4">*@
                @*<div class="form-group checkbox">
                        @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive)
                    </div>*@
                @*<div class="form-group checkbox">
                    <input type="checkbox" id="IsActive" name="cc" ng-model="IsActive" />
                    <label for="IsActive" class="without-padding"><span></span>Is Active</label>
                </div>*@
                
            @*</div>*@
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="form-group checkbox">
                    @Html.CheckBoxFor(model => model.IsActive)
                    @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>
            <div class="buttongroup">
                <input type="submit" value="Save" class="btn green-btn" />
                @Html.ActionLink("Cancel", "Subuser", null, new { @class = "btn black-btn" })
            </div>
        </div>
        </div>
        }
    </div>